<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.repository.QnaMapper">
    <select id="selectQnaList" resultType="com.project.model.QnaDto">
        SELECT QNA_CODE as qnaCode, TITLE as title, CONTENT as content, USER_ID as userId, WRITE_DATE as writeDate, REPLY as reply
        FROM QNA
        <where>
        <if test="isAdmin == false">
            USER_ID = #{userId}
        </if>
        </where>
        ORDER BY WRITE_DATE DESC
    </select>

    <select id="selectQnaDetail" resultType="com.project.model.QnaDto">
        SELECT QNA_CODE as qnaCode, TITLE as title, CONTENT as content, USER_ID as userId, WRITE_DATE as writeDate, REPLY as reply
        FROM QNA
        WHERE QNA_CODE = #{qnaCode}
    </select>

    <insert id="insertQna" parameterType="com.project.model.QnaDto">
        INSERT INTO QNA (QNA_CODE, TITLE, CONTENT, USER_ID, WRITE_DATE)
        VALUES (#{qnaCode}, #{title}, #{content}, #{userId}, NOW())
    </insert>

    <update id="updateReply">
        UPDATE QNA SET REPLY = #{reply} WHERE QNA_CODE = #{qnaCode}
    </update>

    <update id="updateQna" parameterType="com.project.model.QnaDto">
        UPDATE QNA
        SET TITLE = #{title}, CONTENT = #{content}
        WHERE QNA_CODE = #{qnaCode}
    </update>

    <delete id="deleteQna">
        DELETE FROM QNA WHERE QNA_CODE = #{qnaCode}
    </delete>

    <select id="selectNoticeList" resultType="com.project.model.QnaDto">
        SELECT 
            NOTICE_CODE as noticeCode,
            CATEGORY as type,
            TITLE as title,
            CONTENT as content,
            WRITER as writer,
            WRITE_DATE as writeDate
        FROM NOTICE
        <where>
            <if test="title != null and title != ''">
                AND TITLE LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="writer != null and writer != ''">
                AND WRITER LIKE CONCAT('%', #{writer}, '%')
            </if>
        </where>
        ORDER BY WRITE_DATE DESC
    </select>

    <select id="selectNoticeDetail" resultType="com.project.model.QnaDto">
        SELECT 
            NOTICE_CODE as noticeCode,
            CATEGORY as type,
            TITLE as title,
            CONTENT as content,
            WRITER as writer,
            WRITE_DATE as writeDate
        FROM NOTICE
        WHERE NOTICE_CODE = #{noticeCode}
    </select>

    <insert id="insertNotice" parameterType="com.project.model.QnaDto">
        INSERT INTO NOTICE (NOTICE_CODE, CATEGORY, TITLE, CONTENT, WRITER, WRITE_DATE)
        VALUES (#{noticeCode}, #{type}, #{title}, #{content}, #{writer}, NOW())
    </insert>

    <update id="updateNotice" parameterType="com.project.model.QnaDto">
        UPDATE NOTICE
        SET CATEGORY = #{type}, TITLE = #{title}, CONTENT = #{content}
        WHERE NOTICE_CODE = #{noticeCode}
    </update>

    <delete id="deleteNotice">
        DELETE FROM NOTICE WHERE NOTICE_CODE = #{noticeCode}
    </delete>

    <select id="selectFaqList" resultType="com.project.model.QnaDto">
        SELECT FAQ_CODE as faqCode, QUESTION as question, ANSWER as answer
        FROM FAQ
        ORDER BY FAQ_CODE
    </select>

    <select id="selectFaqDetail" resultType="com.project.model.QnaDto">
        SELECT FAQ_CODE as faqCode, QUESTION as question, ANSWER as answer
        FROM FAQ
        WHERE FAQ_CODE = #{faqCode}
    </select>

    <insert id="insertFaq" parameterType="com.project.model.QnaDto">
        INSERT INTO FAQ (FAQ_CODE, QUESTION, ANSWER)
        VALUES (#{faqCode}, #{question}, #{answer})
    </insert>

    <update id="updateFaq" parameterType="com.project.model.QnaDto">
        UPDATE FAQ SET QUESTION = #{question}, ANSWER = #{answer}
        WHERE FAQ_CODE = #{faqCode}
    </update>

    <delete id="deleteFaq">
        DELETE FROM FAQ WHERE FAQ_CODE = #{faqCode}
    </delete>
</mapper>